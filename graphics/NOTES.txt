Uses of Content Streams
=======================

- page contents (one or more content streams):
  Resources come from the page dictionary (inherited through the page tree).

- form XObjects (see 8.10, "Form XObjects")
  Resources come from the stream dictionary.

- Glyphs in a Type 3 fonts (9.6.4, "Type 3 fonts")
  The search order for resources is:
    1. The stream dictionary of the glyph
    2. The Type 3 font dictionary
    3. The page dictionary (inherited through the page tree)
  The content-stream may be shape-only or may also describe colour.

- patterns (8.7, "Patterns")
  Resources come from the stream dictionary.
  The content-stream may be shape-only or may also describe colour.

- annotation appearances (12.5.5, "Appearance streams")
  Resources come from the stream dictionary.

TODO(voss): how to detect resource loops?


PDF Resources
=============

There are seven different PDF resource types:
  - ExtGState
  - ColorSpace
  - Pattern
  - Shading
  - XObject
  - Font
  - Properties (marked content)

There are three different contexts for resources:
  - free (not yet tied to a PDF file)
  - tied to a file (can use pdf.Reference, may be indirect)
  - tied to a page (normally in page dict, refered to by a name)
The idea is for the user to get a free resource object which is passed to the
functions using resources (e.g. to set a font). These functions will then embed
the resource into the file, if needed, and add it to the resource dict.


